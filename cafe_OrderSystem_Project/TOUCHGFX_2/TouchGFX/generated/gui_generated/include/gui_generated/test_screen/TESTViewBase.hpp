/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TESTVIEWBASE_HPP
#define TESTVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/test_screen/TESTPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/Image.hpp>

class TESTViewBase : public touchgfx::View<TESTPresenter>
{
public:
    TESTViewBase();
    virtual ~TESTViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::Container Tail;
    touchgfx::TextArea textArea2_1;
    touchgfx::TextAreaWithOneWildcard totalPrice2;
    touchgfx::TextArea text_WON;
    touchgfx::ButtonWithLabel buttonWithLabel1;
    touchgfx::Container Header;
    touchgfx::TextArea titleText;
    touchgfx::Button backButton;
    touchgfx::TextArea text_WON_1;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea menuname;
    touchgfx::TextAreaWithOneWildcard count;
    touchgfx::TextAreaWithOneWildcard totalPrice;
    touchgfx::TextArea textArea3;
    touchgfx::Box boundary1;
    touchgfx::Box boundary1_1;
    touchgfx::Box boundary1_2;
    touchgfx::Image menuImage;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TOTALPRICE2_SIZE = 20;
    touchgfx::Unicode::UnicodeChar totalPrice2Buffer[TOTALPRICE2_SIZE];
    static const uint16_t COUNT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar countBuffer[COUNT_SIZE];
    static const uint16_t TOTALPRICE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar totalPriceBuffer[TOTALPRICE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TESTViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // TESTVIEWBASE_HPP
