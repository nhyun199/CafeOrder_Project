#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_HakgyoansimBareondotumR_otf_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0044, -1 },  // (First char = [0x0044, uni0044], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, uni0046], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, uni004F], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, uni0050], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, uni0057], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, uni0077], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, uni0079], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0043, uni0043], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, uni004B], Second char = [0x0043, uni0043], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0043, uni0043], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0043, uni0043], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0043, uni0043], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0047, uni0047], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, uni004B], Second char = [0x0047, uni0047], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0047, uni0047], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0047, uni0047], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0047, uni0047], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, uni0046], Second char = [0x004A, uni004A], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, uni0050], Second char = [0x004A, uni004A], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x004A, uni004A], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x004A, uni004A], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x004A, uni004A], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x004F, uni004F], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, uni004B], Second char = [0x004F, uni004F], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x004F, uni004F], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x004F, uni004F], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x004F, uni004F], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0051, uni0051], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, uni004B], Second char = [0x0051, uni0051], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0051, uni0051], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0051, uni0051], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0051, uni0051], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, uni0043], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, uni0044], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, uni004F], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, uni0051], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, uni0061], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, uni0062], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, uni0063], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, uni0065], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0067, -1 },  // (First char = [0x0067, uni0067], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, uni0068], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, uni006B], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, uni0070], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0071, -1 },  // (First char = [0x0071, uni0071], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, uni0073], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, uni0075], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, uni0077], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, uni0078], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, uni0079], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, uni007A], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, uni0061], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, uni0062], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, uni0063], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, uni0065], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0067, -1 },  // (First char = [0x0067, uni0067], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, uni006B], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, uni006D], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, uni006E], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, uni0070], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0071, -1 },  // (First char = [0x0071, uni0071], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, uni0073], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, uni0075], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, uni007A], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0057, uni0057], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0057, uni0057], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, uni0044], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, uni0047], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, uni004C], Second char = [0x0059, uni0059], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, uni004F], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, uni0051], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, uni0062], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, uni0063], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, uni0065], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0067, -1 },  // (First char = [0x0067, uni0067], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, uni006B], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, uni006D], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, uni006E], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, uni0070], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0071, -1 },  // (First char = [0x0071, uni0071], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, uni0073], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, uni0075], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, uni0079], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, uni007A], Second char = [0x0059, uni0059], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0061, uni0061], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0061, uni0061], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0061, uni0061], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x006D, uni006D], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x006D, uni006D], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x006D, uni006D], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x006E, uni006E], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x006E, uni006E], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x006E, uni006E], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0070, uni0070], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0070, uni0070], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0070, uni0070], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0071, uni0071], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0071, uni0071], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0071, uni0071], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0072, uni0072], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0072, uni0072], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0072, uni0072], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0073, uni0073], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0073, uni0073], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0073, uni0073], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0075, uni0075], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x0075, uni0075], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0075, uni0075], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0077, uni0077], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0077, uni0077], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0078, uni0078], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x007A, uni007A], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, uni0056], Second char = [0x007A, uni007A], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, uni0059], Second char = [0x007A, uni007A], Kerning dist = -1)
};
